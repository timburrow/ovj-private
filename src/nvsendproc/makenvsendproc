# 
# Copyright (c) 1999-2000 Varian,Inc. All Rights Reserved. 
# This software contains proprietary and confidential
# information of Varian, Inc. and its contributors.
# Use, disclosure and reproduction is prohibited without
# prior consent.
#
#
# makenvsendproc  make file
#
# make -f makenvsendproc creates Sendproc
# make -f makenvsendproc dbx, creates Sendproc	DBX ver.
#
# ----->  dbx or profiling libraries are not a standard release item and are not to
#         be given to customers....    1/29/88  Greg Brissey
#

MAKEFILE= makenvsendproc

.PRECIOUS= libSendproc.a libSendproc_dbx.a

# sourcedir, sccsdir & vnmrdir are environment variables
# sccsdir & vnmrdir are environment variables
# sccsdir -> SCCS directory
# vnmrdir -> vnmr directory
SRCDIR=$(sourcedir)
SCCSDIR=$(sccsdir)
NDDSDIR=$(nddsdir)
NDDSGENDIR=$(nddsgendir)

#------  The Real Sources for object are contained in one directory --
# for testing it is '../' normally it would be a absolute path..
# SRC_DIR=$(SRCDIR)/sysnvsendproc/
SRC_DIR=./


#-----  Project Category Under the SCCS directory --------
# sccsdir -> SCCS directory  (e.g., /big/sccs )
# PROJCAT= vnmr/  -> directory under SCCS directory  (e.g., /big/sccs/vnmr/ )
PROJCAT=

# NDDSHOME = /sw/NDDS/ndds.3.0m
# NDDSLIBPATH = lib/sparcSol2.9cc5.2
# NDDSHOME = /sw/NDDS/ndds.3.1a
# NDDSHOME = /sw/NDDS/ndds.3.1b.rev3
# NDDSLIBPATH = lib/sparcSol2.9cc5.4

NDDSHOME = $(NDDSDIR)
NDDSHOME_GEN = $(NDDSGENDIR)
NDDSLIBPATH = lib/SolLibs

STDLIBS = -lnsl -lgenIO -lsocket -lgen -lposix4 -lpthread -lm -lc
 
NDDSLIBS = -L$(NDDSHOME)/$(NDDSLIBPATH) \
	-lnddsdiag -lnddsz -lnddsutilsz -lnddscdrz -lutilsipz -lutilsxxz -lperftimez -lwavesurf \
	$(STDLIBS)

NDDSLIBS_SFU = -L$(nddsdir)/$(NDDSLIBPATH) \
	$(nddsdir)/$(NDDSLIBPATH)/libnddsdiagz.a \
	$(nddsdir)/$(NDDSLIBPATH)/libnddsz.a  \
	$(nddsdir)/$(NDDSLIBPATH)/libnddsutilsz.a \
	$(nddsdir)/$(NDDSLIBPATH)/libnddscdrz.a \
	$(nddsdir)/$(NDDSLIBPATH)/libutilsxxz.a \
	$(nddsdir)/$(NDDSLIBPATH)/libutilsipz.a \
	$(nddsdir)/$(NDDSLIBPATH)/libperftimez.a \
	-static-libgcc -ldl -lm -lpthread -lsocket -lport -lbind



#  NDDSLIBS = $(STDLIBS)  testing

RLIBDIR = -R /vnmr/lib:$(NDDSHOME)/$(NDDSLIBPATH)
# RLIBDIR = -R /vnmr/lib:$(NDDSHOME)/lib/sparcSol2.8cc5.2
# RLIBDIR = -R /vnmr/lib:$(NDDSHOME)/lib/sparcSol2.9cc5.4
 
INCLUDES = -I$(NDDSHOME)/include/unix \
	-I$(NDDSHOME)/include/share

# where the NDDS include and libraries are
# NDDS_HOME = /sw/NDDS/ndds.3.0m
# NDDS_HOME = /sw/NDDS/ndds.3.1a
# NDDS_HOME = /sw/NDDS/ndds.3.1b.rev3
NDDS_HOME = $(NDDSHOME)

# NDDSGEN = $(NDDS_HOME)/bin/sparcSol2.8cc5.2/nddsgen
# NDDSGEN = $(NDDS_HOME)/bin/sparcSol2.9cc5.3/nddsgen
NDDSGEN = $(NDDS_HOME)/bin/SolBin/nddsgen

CCC = CC
CC = cc
LIBS= $(RLIBDIR) $(NDDSLIBS)
OBJDIR= sol
OPTIMIZE= -xO2
DEBUGOPT= -g - g -xF -xsb
CFLAGS= -O2 -Xa -DSOLARIS
CPPFLAGS=
LDFLAGS=
TARGET_ARCH=
COMPILE.c= $(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
LINK.c= $(CCC) $(LDFLAGS) $(TARGET_ARCH)

NVSENDPROC_SRC_DIR= $(SRC_DIR)
SENDPROC_SRC_DIR= $(SRC_DIR)
NVEXPPROC_SRC_DIR= $(SRC_DIR)
NVRECVPROC_SRC_DIR= $(SRC_DIR)
EXPPROC_SRC_DIR= $(SRC_DIR)
NCOMM_SRC_DIR= $(SRC_DIR)
ROBOPROC_SRC_DIR= $(SRC_DIR)
VWACQ_SRC_DIR= $(SRC_DIR)
NVACQ_SRC_DIR= $(SRC_DIR)
NVPSG_SRC_DIR= $(SRC_DIR)

#--- SCCS Sources ----
NVSENDPROC_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)nvsendproc/SCCS/s.
SENDPROC_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)sendproc/SCCS/s.
NVEXPPROC_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)nvexpproc/SCCS/s.
NVRECVPROC_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)nvrecvproc/SCCS/s.
EXPPROC_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)expproc/SCCS/s.
NCOMM_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)ncomm/SCCS/s.
ROBOPROC_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)roboproc/SCCS/s.
VWACQ_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)vwacq/SCCS/s.
NVACQ_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)nvacq/SCCS/s.
NVPSG_SCCS_SRC=$(SCCSDIR)/$(PROJCAT)nvpsg/SCCS/s.

NVSENDPROC_SRC_DIR= $(NVSENDPROC_SCCS_SRC)
SENDPROC_SRC_DIR= $(SENDPROC_SCCS_SRC)
NVEXPPROC_SRC_DIR= $(NVEXPPROC_SCCS_SRC)
NVRECVPROC_SRC_DIR= $(NVRECVPROC_SCCS_SRC)
EXPPROC_SRC_DIR= $(EXPPROC_SCCS_SRC)
NCOMM_SRC_DIR= $(NCOMM_SCCS_SRC)
ROBOPROC_SRC_DIR= $(ROBOPROC_SCCS_SRC)
VWACQ_SRC_DIR= $(VWACQ_SCCS_SRC)
NVACQ_SRC_DIR= $(NVACQ_SCCS_SRC)
NVPSG_SRC_DIR= $(NVPSG_SCCS_SRC)


#--- Link Commands for Sources Needed. -------
NVSENDPROC_LN = ln -s $(NVSENDPROC_SRC_DIR)$(@)
SENDPROC_LN = ln -s $(SENDPROC_SRC_DIR)$(@)
NVEXPPROC_LN = ln -s $(NVEXPPROC_SRC_DIR)$(@)
NVRECVPROC_LN = ln -s $(NVRECVPROC_SRC_DIR)$(@)
EXPPROC_LN = ln -s $(EXPPROC_SRC_DIR)$(@)
ROBOPROC_LN = ln -s $(ROBOPROC_SRC_DIR)$(@)
NCOMM_LN = ln -s $(NCOMM_SRC_DIR)$(@)
VWACQ_LN = ln -s $(VWACQ_SRC_DIR)$(@)
NVACQ_LN = ln -s $(NVACQ_SRC_DIR)$(@)
 
#---  SCCS Extraction Commands for Sources Needed.  -------
NVSENDPROC_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)nvsendproc/SCCS get
SENDPROC_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)sendproc/SCCS get
ROBOPROC_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)roboproc/SCCS get
NCOMM_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)ncomm/SCCS get
NVEXPPROC_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)nvexpproc/SCCS get
NVRECVPROC_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)nvrecvproc/SCCS get
EXPPROC_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)expproc/SCCS get
VWACQ_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)vwacq/SCCS get
NVACQ_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)nvacq/SCCS get
NVPSG_SGET = sccs -p$(SCCSDIR)/$(PROJCAT)nvpsg/SCCS get
 
#----  default source extraction to links -------
#NVSENDPROC_GET= $(NVSENDPROC_LN)
#SENDPROC_GET= $(SENDPROC_LN)
#ROBOPROC_GET= $(ROBOPROC_LN)
#NCOMM_GET= $(NCOMM_LN)
#EXPPROC_GET= $(EXPPROC_LN)
#VWACQ_GET= $(VWACQ_LN)
#NVACQ_GET= $(NVACQ_LN)

NVSENDPROC_GET= $(NVSENDPROC_SGET)
SENDPROC_GET= $(SENDPROC_SGET)
ROBOPROC_GET= $(ROBOPROC_SGET)
NCOMM_GET= $(NCOMM_SGET)
NVEXPPROC_GET= $(NVEXPPROC_SGET)
NVRECVPROC_GET= $(NVRECVPROC_SGET)
EXPPROC_GET= $(EXPPROC_SGET)
VWACQ_GET= $(VWACQ_SGET)
NVACQ_GET= $(NVACQ_SGET)
NVPSG_GET= $(NVPSG_SGET)


#------------------------------------------------------------------------
#--- NCOMM Sources that are needed for Sendproc
#------------------------------------------------------------------------
# Communications libraries
NCOMM_HDR_LIB=			\
		errLogLib.h	\
		hhashLib.h	\
		ipcKeyDbm.h	\
		ipcMsgQLib.h	\
                listObj.h       \
		mfileObj.h	\
		msgQLib.h	\
		semLib.h	\
		shrMLib.h

NCOMM_SRC_LIB=			\
		errLogLib.c	\
		hhashLib.c	\
		ipcKeyDbm.c	\
		ipcMsgQLib.c	\
                listObj.c       \
		mfileObj.c	\
		semLib.c	\
		msgQLib.c	\
		shrMLib.c

NCOMM_OBJ_LIB= $(NCOMM_SRC_LIB:.c=.o)

CHANOBJ_HDR=			\
		sockets.h


CHANOBJ_SRC=			\
		fdmask.c

CHANOBJ_OBJ=$(CHANOBJ_SRC:.c=.o)

#---- All Sources and headers required for compilation -----

#----- Expproc header files that are needed
EXPPROC_HDR=                    \
		expentrystructs.h \
		expQfuncs.h 	\
                hostMsgChannels.h \
		shrexpinfo.h      \
                parser.h


#		commfuncs.h	\

EXPPROC_SRC=			\
                parser.c 	\
		daemon.c

#                excepthandler.c \

#		commfuncs.c	\

EXPPROC_OBJ= $(EXPPROC_SRC:.c=.o)

NVEXPPROC_SRC=			\
		HBthread.c	\
		exceptHandler.c

NVEXPPROC_OBJ= $(NVEXPPROC_SRC:.c=.o)

ROBOPROC_SRC=
ROBOPROC_OBJ= $(ROBOPROC_SRC:.c=.o)

VWACQ_HDR=			\
		rngLLib.h	\
		hostAcqStructs.h
VWACQ_SRC=			\
		rngLLib.c

VWACQ_OBJ= $(VWACQ_SRC:.c=.o)

#------------------------------------------------------------------------
#-- sendproc Source  files 
#------------------------------------------------------------------------
NVSENDPROC_HDR=			\
		nddsfuncs.h      \
		barrier.h      \
		nddsbufmngr.h      \
		threadfuncs.h

NVSENDPROC_SRC=			\
		nddsfuncs.c      \
		nddsbufmngr.c      \
		sendfuncs.c	\
		sendproc.c      \
		barrier.c      \
		threadfuncs.c

NVSENDPROC_OBJ= $(NVSENDPROC_SRC:.c=.o)


SENDPROC_HDR=

SENDPROC_SRC=			\
		sendcmds.c


SENDPROC_OBJ= $(SENDPROC_SRC:.c=.o)


#------------------------------------------------------------------------
#-- nvrecvproc Source  files 
#------------------------------------------------------------------------
NVRECVPROC_HDR=			\
		rngBlkLib.h

NVRECVPROC_SRC=			\
		rngBlkLib.c

NVRECVPROC_OBJ= $(NVRECVPROC_SRC:.c=.o)



#----- Autoproc header files that are needed

NVPSG_HDR=			\
		lc.h		\
		PSGFileHeader.h

NDDS_TYPES = Codes_Downld.x App_HB.x


NDDS_C_SRC= $(NDDS_TYPES:.x=.c)
NDDS_C_HDR= $(NDDS_TYPES:.x=.h)
NDDS_OBJ= $(NDDS_TYPES:.x=.o)

NVACQ_HDR=			\
		crc32.h		\
		NDDS_Obj.h	\
		NDDS_PubFuncs.h	\
		NDDS_SubFuncs.h	

NVACQ_SRC=			\
		crc32.c         \
		sysUtils.c      \
		NDDS_Obj.c      \
		NDDS_PubFuncs.c \
		NDDS_SubFuncs.c	

NVACQ_OBJ= $(NVACQ_SRC:.c=.o)


#---- All Sources and headers required for compilation -----
ALLSRC= $(NVSENDPROC_SRC) $(NVSENDPROC_HDR)  \
	$(SENDPROC_SRC) $(SENDPROC_HDR)  \
	$(NVRECVPROC_SRC) $(NVRECVPROC_HDR)  \
	$(ROBOPROC_SRC) $(ROBOPROC_HDR)  \
	$(NCOMM_SRC_LIB) $(NCOMM_HDR_LIB) \
	$(CHANOBJ_SRC) $(CHANOBJ_HDR) \
	$(VWACQ_SRC) $(VWACQ_HDR)	\
	$(NVACQ_SRC) $(NVACQ_HDR)	\
	$(NVPSG_HDR)	\
	$(NVEXPPROC_SRC) $(NVEXPPROC_HDR)  \
	$(EXPPROC_SRC) $(EXPPROC_HDR) $(NDDS_C_SRC) $(NDDS_HDR)
 
ALL_C_SRC = $(NVSENDPROC_SRC) $(SENDPROC_SRC) $(VWACQ_SRC) \
	    $(NVRECVPROC_SRC) $(NVRECVPROC_HDR)  \
	    $(NVACQ_SRC)  $(EXPPROC_SRC)  $(NVEXPPROC_SRC) $(NDDS_SRC)  \
	    $(ROBOPROC_SRC)  $(NCOMM_SRC_LIB)  $(CHANOBJ_SRC)
	    
all: std
	@echo "NMR_ID Sendproc complete"



# link to ncomm library libncomm.a 
# assume sun4, SunOS

std : 
	@( if [ ! -d $(OBJDIR)obj ]; then	\
	   mkdir $(OBJDIR)obj; 			\
	fi)
	( cd $(OBJDIR)obj;			\
	$(MAKE) -e -f ../$(MAKEFILE) \
	"CFLAGS = $(OPTIMIZE) -DDEBUG -DRTI_UNIX -DNIRVANA $(INCLUDES)"	\
	Sendproc )
	@echo "NMR_ID Sendproc complete ----------------------------------"


#std : $$(MAKEFILE) Source
#	@( if [ ! -d $(OBJDIR)obj ]; then	\
#	   mkdir $(OBJDIR)obj; 			\
#	fi)
#	( cd $(OBJDIR)obj;			\
#	$(MAKE) -e -f ../$(MAKEFILE) \
#	"CFLAGS = $(OPTIMIZE) -DDEBUG"		\
#	"LDFLAGS = -L/vnmr/lib" \
#	"OBJDIR=$(sun4objdir)"		\
#	Sendproc )
#	@echo "NMR_ID Sendproc complete -------------------------------------"

# for debug link all  objects into recvproc
dbx : 
	@( if [ ! -d $(OBJDIR)dbx ]; then	\
	    mkdir $(OBJDIR)dbx; 			\
	fi )
	( cd $(OBJDIR)dbx;			\
	$(MAKE) -e -f ../$(MAKEFILE) \
	"CFLAGS = $(DEBUGOPT) -DDEBUG -DRTI_UNIX -DNIRVANA $(INCLUDES)" \
	Sendproc_dbx )
	@echo "NMR_ID Sendproc_dbx complete ----------------------------------"

# WINDOWS : getsrc

WINDOWS :
	@( if [ ! -d win_sfu ]; then    \
	    mkdir win_sfu;               \
	fi)
	( cd win_sfu;                   \
	$(MAKE) -e -f ../$(MAKEFILE) \
	"CC = gcc"                      \
	"CCC = g++"                     \
	"DEBUGOPT = -g"                 \
	"NDDSLIBPATH = lib/WinSFULibs"     \
	"NDDSGEN = $(NDDSHOME)/bin/WinBin/nddsgen.exe"  \
	"STDLIBS = -lsocket -lm -lpthread" \
	"RLIBDIR = -rpath /vnmr/lib:$(NDDSHOME)/lib/WinSFULibs" \
	"CFLAGS = -g -DDEBUG -D_ALL_SOURCE -D_USE_LIBPORT -D_REENTRANT -DNO_MULTICAST -DLINUX -DRTI_UNIX -DNIRVANA $(INCLUDES)" \
	Sendproc_win )
	@echo "Windows Sendproc complete ----------------------------------"

getsrc : 
	( $(MAKE) -e -f $(MAKEFILE) \
             "NVSENDPROC_SRC_DIR= $(NVSENDPROC_SCCS_SRC)"   \
             "NVSENDPROC_GET= $(NVSENDPROC_SGET)" 	\
             "SENDPROC_SRC_DIR= $(SENDPROC_SCCS_SRC)"   \
             "SENDPROC_GET= $(SENDPROC_SGET)" 	\
             "NVEXPPROC_SRC_DIR= $(NVEXPPROC_SCCS_SRC)"   \
             "NVEXPPROC_GET= $(NVEXPPROC_SGET)" 	\
             "EXPPROC_SRC_DIR= $(EXPPROC_SCCS_SRC)"   \
             "EXPPROC_GET= $(EXPPROC_SGET)" 	\
             "NCOMM_SRC_DIR= $(NCOMM_SCCS_SRC)" \
	     "NCOMM_GET= $(NCOMM_SGET)" \
             "VWACQ_SRC_DIR= $(VWACQ_SCCS_SRC)" \
	     "VWACQ_GET= $(VWACQ_SGET)"		\
             "NVACQ_SRC_DIR= $(NVACQ_SCCS_SRC)" \
	     "NVACQ_GET= $(NVACQ_SGET)"		\
             "ROBOPROC_SRC_DIR= $(ROBOPROC_SCCS_SRC)" \
             "ROBOPROC_GET= $(ROBOPROC_SGET)" src)


cl : getsrc
	#cmode
	#ignore SIGUSR1
	#setenv NESSIE_CONSOLE mv162
	#unsetopt win_fork
	#load -C  -DDEBUG $(NCOMM_SRC_LIB)
	#load -C  -DDEBUG $(CHANOBJ_SRC)
	#load -C  -DDEBUG $(EXPPROC_SRC)
	#load -C  -DDEBUG $(SENDPROC_SRC)
	#link
	#unres

clclean :
	#cmode
	#unload $(NCOMM_SRC_LIB)
	#unload $(CHANOBJ_SRC)
	#unload $(EXPPROC_SRC)
	#unload $(SENDPROC_SRC)

# ---- Be sure True Source that we link to are upto date.
Source :
	( cd $(SRC_DIR); $(MAKE) -e -f $(MAKEFILE) \
		"NVSENDPROC_SRC_DIR= $(NVSENDPROC_SCCS_SRC)"   \
		"NVSENDPROC_GET= $(NVSENDPROC_SGET)" 	\
		"SENDPROC_SRC_DIR= $(SENDPROC_SCCS_SRC)"   \
		"SENDPROC_GET= $(SENDPROC_SGET)" 	\
		"NVEXPPROC_SRC_DIR= $(NVEXPPROC_SCCS_SRC)"   \
		"NVEXPPROC_GET= $(NVEXPPROC_SGET)" 	\
		"EXPPROC_SRC_DIR= $(EXPPROC_SCCS_SRC)"   \
		"EXPPROC_GET= $(EXPPROC_SGET)" 	\
		"NCOMM_SRC_DIR= $(NCOMM_SCCS_SRC)" \
		"NCOMM_GET= $(NCOMM_SGET)" \
		"VWACQ_SRC_DIR= $(VWACQ_SCCS_SRC)" \
		"VWACQ_GET= $(VWACQ_SGET)"		\
		"ROBOPROC_SRC_DIR= $(ROBOPROC_SCCS_SRC)" \
		"ROBOPROC_GET= $(ROBOPROC_SGET)" src)

src : $$(MAKEFILE) $(ALLSRC)
	@echo Sources up to date...

# # Sendproc : $(SENDPROC_OBJ) $(EXPPROC_OBJ)
# 	(umask 2; $(LINK.c) -o $@ -L$(NCOMMDIR) $(SENDPROC_OBJ) $(EXPPROC_OBJ) -lncomm $(LIBS))
# 	( umask 2; cp $@ ..)
# 	@echo Sendproc is complete
Sendproc_dbx : $(NVSENDPROC_OBJ) $(SENDPROC_OBJ) $(NVACQ_OBJ) $(NDDS_OBJ) $(NDDS_OBJ) $(NCOMM_OBJ_LIB) $(EXPPROC_OBJ) $(NVEXPPROC_OBJ) $(NVRECVPROC_OBJ) $(VWACQ_OBJ)
	(umask 2; $(LINK.c) -o $@  $(NVSENDPROC_OBJ) $(SENDPROC_OBJ) $(NVACQ_OBJ) $(NDDS_OBJ)  $(NCOMM_OBJ_LIB) $(EXPPROC_OBJ) $(NVEXPPROC_OBJ) $(NVRECVPROC_OBJ) $(VWACQ_OBJ)  $(LIBS))
	( umask 2; cp $@ ..)
	@echo Sendproc_dbx is complete

Sendproc_win : $(NVSENDPROC_OBJ) $(SENDPROC_OBJ) $(NVACQ_OBJ) $(NDDS_OBJ) $(NDDS_OBJ) $(NCOMM_OBJ_LIB) $(EXPPROC_OBJ) $(NVEXPPROC_OBJ) $(NVRECVPROC_OBJ) $(VWACQ_OBJ)
	(umask 2; $(LINK.c) -o Sendproc  $(NVSENDPROC_OBJ) $(SENDPROC_OBJ) $(NVACQ_OBJ) $(NDDS_OBJ)  $(NCOMM_OBJ_LIB) $(EXPPROC_OBJ) $(NVEXPPROC_OBJ) $(NVRECVPROC_OBJ) $(VWACQ_OBJ) $(NDDSLIBS_SFU) )
	( umask 2; cp Sendproc ..)
	@echo Sendproc for Windows is complete


Sendproc : $(NVSENDPROC_OBJ) $(SENDPROC_OBJ) $(NVACQ_OBJ) $(NDDS_OBJ) $(NDDS_OBJ) $(NCOMM_OBJ_LIB) $(EXPPROC_OBJ) $(NVEXPPROC_OBJ) $(NVRECVPROC_OBJ) $(VWACQ_OBJ)
	(umask 2; $(LINK.c) -o $@  $(NVSENDPROC_OBJ) $(SENDPROC_OBJ) $(NVACQ_OBJ) $(NDDS_OBJ)  $(NCOMM_OBJ_LIB) $(EXPPROC_OBJ) $(NVEXPPROC_OBJ) $(NVRECVPROC_OBJ) $(VWACQ_OBJ) $(LIBS))
	( umask 2; cp $@ ..)
	@echo Sendproc is complete


depend: src
	makedepend -f $(MAKEFILE) $(DEBUGOPT) -DDEBUG -DRTI_UNIX -DNIRVANA -Y  -I./  $(ALL_C_SRC) 2>/dev/null

#	makedepend -f $(MAKEFILE) $(DEBUGOPT) -DDEBUG -DRTI_UNIX -DNIRVANA $(INCLUDES) $(ALL_C_SRC) 2>/dev/null

#--- Object Targets ----------------------------------------------

$(NDDS_C_SRC) : $(NDDS_TYPES)
	( umask 2; export NDDSHOME; NDDSHOME=$(NDDSHOME_GEN); $(NDDSGEN) -replace  $(@:.c=.x) )

$(NDDS_C_HDR) : $(NDDS_TYPES)
	( umask 2; export NDDSHOME; NDDSHOME=$(NDDSHOME_GEN); $(NDDSGEN) -replace  $(@:.h=.x) )

$(ALLOBJS) : $(@:.o=.c)
	-(umask 2; $(COMPILE.c) $(@:.o=.c) )

$(SENDPROC_MAN_LIB) : $(@:.nr=.c)
	-(umask 2; mangen $(@:.nr=.c) ; nroff -man $@ > $(@:.nr=.man) )

$(SENDPROC_INSTALLMAN_LIB) : $(@:.2=.c)
	-(umask 2; mangen $(@:.2=.c) ; mv $(@:.2=.nr) $@ )

#------ makefile extraction via SCCS allways. -------
$(MAKEFILE) : 
	$(SENDPROC_SGET) $@

#------------  Source Extraction via SCCS or Links ---------------

$(NVSENDPROC_SRC) $(NVSENDPROC_HDR) : $$(NVSENDPROC_SRC_DIR)$$(@)
	$(NVSENDPROC_GET) $@

$(SENDPROC_SRC) $(SENDPROC_HDR) : $$(SENDPROC_SRC_DIR)$$(@)
	$(SENDPROC_GET) $@

$(ROBOPROC_SRC) $(ROBOPROC_HDR) : $$(ROBOPROC_SRC_DIR)$$(@)
	$(ROBOPROC_GET) $@

$(NCOMM_SRC_LIB) $(NCOMM_HDR_LIB) $(CHANOBJ_SRC) $(CHANOBJ_HDR) : $$(NCOMM_SRC_DIR)$$(@)
	$(NCOMM_GET) $@

$(NVEXPPROC_SRC) $(NVEXPPROC_HDR) : $$(NVEXPPROC_SRC_DIR)$$(@)
	$(NVEXPPROC_GET) $@

$(NVRECVPROC_SRC) $(NVRECVPROC_HDR) : $$(NVRECVPROC_SRC_DIR)$$(@)
	$(NVRECVPROC_GET) $@

$(EXPPROC_SRC) $(EXPPROC_HDR) : $$(EXPPROC_SRC_DIR)$$(@)
	$(EXPPROC_GET) $@

$(VWACQ_SRC) $(VWACQ_HDR) : $$(VWACQ_SRC_DIR)$$(@)
	$(VWACQ_GET) $@

$(NVACQ_SRC) $(NVACQ_HDR) $(NDDS_TYPES) : $$(NVACQ_SRC_DIR)$$(@)
	$(NVACQ_GET) $@

$(NVPSG_HDR) : $$(NVPSG_SRC_DIR)$$(@)
	$(NVPSG_GET) $@

# ---------  Manual dependences ------------- 
sendproc.nr:  sendproc.c
daemon.nr: daemon.c
msgqfuncs.nr: msgqfuncs.c

# DO NOT DELETE THIS LINE -- make depend uses it

nddsfuncs.o: errLogLib.h NDDS_Obj.h NDDS_SubFuncs.h NDDS_PubFuncs.h
nddsfuncs.o: Codes_Downld.h App_HB.h crc32.h threadfuncs.h nddsbufmngr.h
nddsfuncs.o: rngLLib.h rngBlkLib.h
nddsbufmngr.o: rngBlkLib.h rngLLib.h nddsbufmngr.h
sendfuncs.o: shrMLib.h mfileObj.h expentrystructs.h expQfuncs.h shrexpinfo.h
sendfuncs.o: hostAcqStructs.h errLogLib.h lc.h PSGFileHeader.h NDDS_Obj.h
sendfuncs.o: threadfuncs.h nddsbufmngr.h rngLLib.h rngBlkLib.h nddsfuncs.h
sendfuncs.o: barrier.h
sendproc.o: hostMsgChannels.h msgQLib.h ipcMsgQLib.h shrMLib.h mfileObj.h
sendproc.o: errLogLib.h threadfuncs.h nddsbufmngr.h rngLLib.h rngBlkLib.h
sendproc.o: barrier.h
barrier.o: barrier.h errLogLib.h
threadfuncs.o: NDDS_Obj.h Codes_Downld.h App_HB.h errLogLib.h nddsfuncs.h
threadfuncs.o: threadfuncs.h nddsbufmngr.h rngLLib.h rngBlkLib.h barrier.h
sendcmds.o: parser.h
rngLLib.o: rngLLib.h
rngBlkLib.o: rngBlkLib.h
crc32.o: crc32.h
sysUtils.o: errLogLib.h
NDDS_Obj.o: errLogLib.h NDDS_Obj.h
NDDS_PubFuncs.o: errLogLib.h NDDS_Obj.h
NDDS_SubFuncs.o: errLogLib.h NDDS_Obj.h
parser.o: errLogLib.h hhashLib.h parser.h
HBthread.o: NDDS_Obj.h NDDS_PubFuncs.h App_HB.h errLogLib.h
exceptHandler.o: errLogLib.h
hhashLib.o: errLogLib.h hhashLib.h
ipcKeyDbm.o: errLogLib.h shrMLib.h mfileObj.h ipcKeyDbm.h
ipcMsgQLib.o: errLogLib.h ipcMsgQLib.h
listObj.o: listObj.h
mfileObj.o: errLogLib.h mfileObj.h
semLib.o: errLogLib.h semLib.h mfileObj.h
msgQLib.o: errLogLib.h hostMsgChannels.h mfileObj.h msgQLib.h ipcMsgQLib.h
msgQLib.o: shrMLib.h
shrMLib.o: errLogLib.h shrMLib.h mfileObj.h
